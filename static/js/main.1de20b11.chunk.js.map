{"version":3,"sources":["Project files/Task.js","Project files/Board.js","Project files/AddBoardModal.js","Project files/DropdownBoards.js","Project files/AddTaskModal.js","Project files/DeleteBoardModal.js","Project files/Canban.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["connect","state","tasks","taskList","board","boardList","dispatch","addTodo","todo","type","payload","deleteTask","id","changeTaskStatus","props","task","boardStatus","map","el","status","console","log","length","Col","Card","CardBody","name","Alert","color","priority","Button","size","onClick","title","filter","sort","a","b","key","uuidv4","stateBoard","setBoard","useState","modalStatus","setModalStatus","newTitle","setNewTitle","newStatus","setNewStatus","Modal","isOpen","ModalHeader","ModalBody","Label","Input","value","onChange","e","target","Row","ModalFooter","boardSet","setTitle","dropdownOpen","setDropdownOpen","dropdownList","DropdownItem","Dropdown","toggle","prevState","DropdownToggle","caret","DropdownMenu","addNewTask","isModalOpen","setModalOpen","newPriority","setNewPriority","buttonHandler","deleteBoard","App","className","Container","initialState","Math","random","priorities","canbanControlPanel","action","statuses","indexOf","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1de20b11.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../App.css';\r\nimport {\r\n    Col, Card, CardBody, Button, Alert\r\n} from 'reactstrap'\r\nimport {connect} from 'react-redux';\r\n\r\nfunction Task(props) {\r\n    const alertColors = ['success', 'warning', 'danger']\r\n\r\n    const {task, deleteTask, changeTaskStatus} = props\r\n    const boardStatus = props.board.map(el => el.status)\r\n\r\n\r\n    console.log(`${boardStatus[boardStatus.length - 1]}`)\r\n    return (\r\n        <div>\r\n            <Col>\r\n                <Card>\r\n                    <CardBody>\r\n                        {task.name}\r\n                        <Alert color={alertColors[task.priority]}>\r\n                            {task.priority}\r\n                            {task.priority !== 2 &&\r\n                            <Button size=\"sm\" onClick={() => changeTaskStatus(task.id, 'UP')}>↑</Button>}\r\n\r\n                            {' '}\r\n                            {task.priority !== 0 &&\r\n                            <Button size=\"sm\" onClick={() => changeTaskStatus(task.id, 'DOWN')}>↓</Button>}\r\n\r\n                        </Alert>\r\n                    </CardBody>\r\n\r\n                    <CardBody>\r\n                        {(task.status !== 'todo' &&\r\n                            <Button onClick={() => changeTaskStatus(task.id, 'LEFT')}>←</Button>)}\r\n                        {(task.status !== `${boardStatus[boardStatus.length - 1]}` &&\r\n                            <Button onClick={() => changeTaskStatus(task.id, 'RIGHT')}>→</Button>)}\r\n                    </CardBody>\r\n                    <Button onClick={() => deleteTask(task.id)}> Delete </Button>\r\n                </Card>\r\n\r\n            </Col>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    tasks: state.taskList,\r\n    board: state.boardList\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n    addTodo: (todo) => dispatch({type: 'TASK_ADD', payload: todo}),\r\n\r\n    deleteTask: (id) => dispatch({type: 'TASK_DELETE', payload: id}),\r\n\r\n    changeTaskStatus: (id, type) => dispatch({type: type, payload: id})\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Task);\r\n","import React from 'react';\r\nimport {Col} from 'reactstrap';\r\nimport {connect} from 'react-redux';\r\nimport Task from './Task';\r\nimport * as uuidv4 from \"uuidv4\";\r\n\r\nfunction Board(props) {\r\n    const {board, tasks} = props\r\n\r\n    return (\r\n        <div>\r\n            <Col>\r\n\r\n                <h3>{board.title}</h3>\r\n                {tasks\r\n                    .filter(el => el.status === board.status)\r\n                    .sort((a, b) => b.priority - a.priority)\r\n                    .map(el => <Task key={uuidv4} task={el}/>\r\n                    )\r\n                }\r\n            </Col>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    tasks: state.taskList\r\n});\r\n\r\nexport default connect(mapStateToProps)(Board);\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport '../App.css';\r\nimport {Col, Row, Button, Input, Label, Modal, ModalFooter, ModalBody, ModalHeader} from 'reactstrap';\r\nimport {connect} from 'react-redux';\r\nimport * as uuidv4 from 'uuidv4';\r\n\r\nfunction AddBoardModal(props) {\r\n    const [modalStatus, setModalStatus] = useState(false)\r\n    const [newTitle, setNewTitle] = useState(' ')\r\n    const [newStatus, setNewStatus] = useState(' ')\r\n    const buttonHandlerAdd = () => {\r\n        props.setBoard(newTitle, newStatus)\r\n        setModalStatus(false)\r\n        setNewTitle(' ')\r\n        setNewStatus(' ')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button onClick={() => setModalStatus(true)}> Add new Board </Button>\r\n            <Modal isOpen={modalStatus}>\r\n                <ModalHeader> Add new Board (= </ModalHeader>\r\n                <ModalBody>\r\n                    <Label>Mew Board</Label>\r\n                    <Input type=\"text\" value={newTitle} onChange={(e) => setNewTitle(e.target.value)}/>\r\n                    <Row>\r\n                        <Col>\r\n                            <Label> Status for filter</Label>\r\n                            <Input type=\"text\" value={newStatus} onChange={(e) => setNewStatus(e.target.value)}/>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button onClick={() => buttonHandlerAdd(newTitle, newStatus)}>Add mew Board </Button>\r\n                    <Button onClick={() => setModalStatus(false)}>Cancel</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    stateBoard: state.setBoard,\r\n\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n    setBoard: (title, status) => dispatch({type: 'BOARD_ADD', payload: {id: uuidv4, title, status}})\r\n\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddBoardModal);\r\n","import {Dropdown, DropdownItem, DropdownMenu, DropdownToggle, ModalBody} from \"reactstrap\";\r\nimport React, {useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\n// import * as uuidv4 from \"uuidv4\";\r\n\r\nfunction DropdownBoards(props) {\r\n\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n    const toggle = () => setDropdownOpen(prevState => !prevState);\r\n    const dropdownList = props.boardList.map(el => <DropdownItem\r\n        onClick={() => props.setTitle(el.title, el.status)}> Board {el.title} Filter {el.status}  </DropdownItem>)\r\n    return (\r\n        <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n            <DropdownToggle caret>\r\n                Board {props.boardSet.title}\r\n            </DropdownToggle>\r\n            <DropdownMenu>\r\n                {[...dropdownList]}\r\n            </DropdownMenu>\r\n        </Dropdown>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    boardList: state.boardList,\r\n    boardSet: state.boardSet\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setTitle: (title, status) => dispatch({type: 'SET_BOARD', payload: {title, status}})\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DropdownBoards);","import React, {useState} from 'react';\r\nimport '../App.css';\r\nimport {Col, Row, Button, Input, Label, Modal, ModalFooter, ModalBody, ModalHeader} from \"reactstrap\";\r\nimport {connect} from 'react-redux';\r\nimport DropdownBoards from './DropdownBoards';\r\nimport * as uuidv4 from \"uuidv4\";\r\n\r\nfunction AddTaskModal(props) {\r\n\r\n    const [isModalOpen, setModalOpen] = useState(false)\r\n    const [newTitle, setNewTitle] = useState(\"\")\r\n    const [newPriority, setNewPriority] = useState(0);\r\n    const buttonHandler = (newTitle, newPriority, status) => {\r\n        props.addNewTask(newTitle, newPriority, status)\r\n        setModalOpen(false)\r\n        setNewTitle('')\r\n    }\r\n    return (\r\n        <>\r\n            <Button onClick={() => setModalOpen(true)}> Add new task </Button>\r\n            <Modal isOpen={isModalOpen}>\r\n                <ModalHeader> Add new task (= </ModalHeader>\r\n                <ModalBody>\r\n                    <Label>Mew Title</Label>\r\n                    <Input type=\"text\" value={newTitle} onChange={(e) => setNewTitle(e.target.value)}/>\r\n                    <Row>\r\n                        <Col>\r\n                            <Label> Priority</Label>\r\n                            <Input type=\"select\" value={newPriority} onChange={(e) => setNewPriority(e.target.value)}>\r\n                                <option value={0}> Low</option>\r\n                                <option value={1}> Med</option>\r\n                                <option value={2}> High</option>\r\n                            </Input>\r\n                        </Col>\r\n                        <Col>\r\n                            <Label> Board </Label>\r\n                            {<DropdownBoards/>}\r\n                        </Col>\r\n                    </Row>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button onClick={() => buttonHandler(newTitle, newPriority, props.boardSet.status)}>Add mew\r\n                        task </Button>\r\n                    {' '}\r\n                    <Button onClick={() => setModalOpen(false)}>Cancel</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    boardSet: state.boardSet\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n    addNewTask: (name, priority, status) => dispatch({\r\n        type: 'TASK_ADD',\r\n        payload: {id: {uuidv4}, name, priority, status}\r\n    })\r\n\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTaskModal);\r\n","import React, {useState} from 'react';\r\nimport '../App.css';\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalHeader\r\n} from 'reactstrap';\r\nimport {connect} from 'react-redux';\r\nimport DropdownBoards from \"./DropdownBoards\";\r\n\r\n\r\nfunction DeleteBoardModal(props) {\r\n    const [modalStatus, setModalStatus] = useState(false)\r\n    const buttonHandler = (title) => {\r\n        props.deleteBoard(title)\r\n        setModalStatus(false)\r\n    }\r\n    console.log(props.boardSet.title)\r\n    return (\r\n\r\n        <>\r\n            <Button onClick={() => setModalStatus(true)}> Delete Board </Button>\r\n            <Modal isOpen={modalStatus}>\r\n                <ModalHeader> Delete Board (= </ModalHeader>\r\n                <ModalBody>\r\n                    <DropdownBoards/>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button onClick={() => buttonHandler(props.boardSet.title)}>Confirm Board Delete!</Button>\r\n                    <Button onClick={() => setModalStatus(false)}>Close window</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    boardList: state.boardList,\r\n    boardSet: state.boardSet\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n\r\n    deleteBoard: (title) => dispatch({type: 'DELETE_BOARD', payload: title})\r\n\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteBoardModal);\r\n","import React from 'react';\r\n\r\nimport  {Row} from 'reactstrap';\r\nimport Board from './Board';\r\nimport {connect} from 'react-redux';\r\nimport AddColumnModal from './AddBoardModal';\r\nimport AddTaskModal from './AddTaskModal';\r\nimport DeleteBoardModal from './DeleteBoardModal';\r\nimport * as uuidv4 from \"uuidv4\";\r\n\r\nfunction Canban(props) {\r\n\r\n    const {board} = props\r\n    return (\r\n        <div>\r\n            <AddTaskModal/>\r\n            <AddColumnModal/>\r\n            <DeleteBoardModal/>\r\n            <Row>\r\n                {board.map(el => <Board key = {uuidv4} board={el}/>)}\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    board: state.boardList,\r\n    tasks: state.taskList\r\n\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(Canban);\r\n\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {Container, Row, Col} from 'reactstrap';\r\nimport Canban from './Project files/Canban';\r\nimport * as uuidv4 from \"uuidv4\";\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Container key={uuidv4}>\r\n                <Canban/>\r\n            </Container>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n","const initialState = {\r\n\r\n    taskList: [\r\n        {id: Math.random(), name: 'First', priority: 0, status: 'todo'},\r\n        {id: Math.random(), name: 'Second', priority: 1, status: 'todo'},\r\n        {id: Math.random(), name: 'Third', priority: 2, status: 'review'},\r\n        {id: Math.random(), name: 'Fourth', priority: 1, status: 'todo'}\r\n    ],\r\n    boardList: [\r\n        {id: Math.random(), title: 'To do!', status: 'todo'},\r\n        {id: Math.random(), title: 'In progress...', status: 'progress'},\r\n        {id: Math.random(), title: 'Need review', status: 'review'},\r\n        {id: Math.random(), title: 'Done!!!', status: 'done'}\r\n\r\n    ],\r\n\r\n   boardSet:\r\n       {title:'',status:''}\r\n\r\n};\r\nconst priorities = [0, 1, 2]\r\nconst canbanControlPanel = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case 'TASK_DELETE' :\r\n            return {\r\n                ...state,\r\n                taskList: state.taskList.filter(el => el.id !== action.payload)\r\n            };\r\n        case 'TASK_ADD' :\r\n            console.log(state.taskList)\r\n            return {\r\n                ...state,\r\n                taskList: [...state.taskList, action.payload]\r\n\r\n            };\r\n        case 'BOARD_ADD' :\r\n            return {\r\n                ...state,\r\n                boardList: [...state.boardList,action.payload]\r\n            };\r\n        case 'SET_BOARD' :\r\n            return {\r\n                ...state,\r\n                boardSet: action.payload\r\n            };\r\n        case 'DELETE_BOARD' :\r\n            return {\r\n                ...state,\r\n                boardList: state.boardList.filter(el => el.title !== action.payload)\r\n            };\r\n\r\n        case 'RIGHT' :\r\n            return {\r\n                ...state,\r\n                taskList: state.taskList.map(el => {\r\n                    if (el.id === action.payload) {\r\n                        const statuses = state.boardList.map(el=>el.status)\r\n                            el.status = statuses[statuses.indexOf(el.status) + 1]\r\n                    }\r\n                    return el\r\n                })\r\n            };\r\n        case 'LEFT' :\r\n            return {\r\n                ...state,\r\n                taskList: state.taskList.map(el => {\r\n                    if (el.id === action.payload) {\r\n                        const statuses = state.boardList.map(el=>el.status)\r\n                        el.status = statuses[statuses.indexOf(el.status) - 1]\r\n                    }\r\n                    return el\r\n                })\r\n            };\r\n        case 'DOWN' :\r\n            return {\r\n                ...state,\r\n                taskList: state.taskList.map(el => {\r\n                    if (el.id === action.payload) {\r\n                        el.priority = priorities[priorities.indexOf(el.priority) - 1]\r\n                    }\r\n                    return el\r\n                })\r\n            };\r\n        case 'UP' :\r\n            return {\r\n                ...state,\r\n                taskList: state.taskList.map(el => {\r\n                    if (el.id === action.payload) {\r\n                        el.priority = priorities[priorities.indexOf(el.priority) + 1]\r\n                    }\r\n                    return el\r\n                })\r\n            };\r\n\r\n        default:\r\n            return state\r\n\r\n\r\n    }\r\n};\r\n\r\nexport default canbanControlPanel;","import { createStore, applyMiddleware} from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport canbanControlPanel from './reducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(canbanControlPanel, composeWithDevTools(\r\n    applyMiddleware(thunk),\r\n));\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {Provider} from 'react-redux'\r\nimport store from './redux/store'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport * as uuidv4 from \"uuidv4\";\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store = {store}>\r\n            <App key = {uuidv4}/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}